name: Deploy Storybook for Dot Components

on:
  # this is being made manual for now
  # it will be part of the release automation when Issue #84 is completed
  workflow_dispatch:

jobs:
  get-version:
    name: Get Version Number for Build
    runs-on: ubuntu-latest
    outputs:
      version-string: ${{ steps.get_version.outputs.VERSION }}

    steps:
      - uses: actions/checkout@v2

      - name: pr-number-action
        id: get_pr
        uses: kkak10/pr-number-action@v1.3
        if: github.event_name == 'pull_request'

      - name: Get the version
        id: get_version
        shell: bash
        run: |
          if [ $GITHUB_EVENT_NAME == "pull_request" ]
          then
              echo ::set-output name=VERSION::0.0.0.${{ steps.get_pr.outputs.pr }}

          elif [ $GITHUB_EVENT_NAME == "release" ]
          then
              x=${GITHUB_REF/refs\/tags\//}
              y=${x/-nightly/}
              echo ::set-output name=VERSION::$y

          else
              echo ::set-output name=VERSION::0.0.1.0
          fi

  build-release:
    needs: [get-version]
    name: Build and Publish Release Images
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build and push Docker images for Storybook
        uses: kciter/aws-ecr-action@v1
        with:
          access_key_id: ${{ secrets.GH_AWS_ACCESS_KEY_ID }}
          secret_access_key: ${{ secrets.GH_AWS_SECRET_ACCESS_KEY }}
          account_id: ${{ secrets.AWS_ACCOUNT_ID }}
          repo: storybook
          region: ${{ secrets.AWS_REGION }}
          dockerfile: Dockerfile
          tags: ${{needs.get-version.outputs.version-string}}

  deploy-release:
    needs: [build-release, get-version]
    name: Deploy Production Release to EKS
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://storybook.lisbon-dev.com/

    steps:
      - uses: actions/checkout@v2

      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.EKS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.EKS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: helm deploy storybook
        uses: koslibpro/helm-eks-action@v1.4.10
        env:
          KUBE_CONFIG_DATA: ${{ secrets.EKS_CONFIG }}
        with:
          command: helm upgrade storybook --namespace=lisbon-prod --set ingress.host=storybook.lisbon-dev.com --set image.tag=${{needs.get-version.outputs.version-string}} --set image.sha=${{github.sha}} build/helm/storybook
