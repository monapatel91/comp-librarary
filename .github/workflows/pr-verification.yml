name: PR Verification

on:
  pull_request:

# Below is copied from test.yml
# TO-DO: figure out how to trigger test.yml workflow to DRY up code
# https://github.com/benc-uk/workflow-dispatch/issues/15
jobs:
  build:
    name: Lint & Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      # https://github.com/marketplace/actions/yarn-install-cache
      - name: Cache yarn dependencies
        uses: c-hive/gha-yarn-cache@v1

      - name: Install dependencies
        run: yarn install --immutable --immutable-cache --check-cache

      - name: Verify Formatting
        run: yarn format:check --base=${{ github.sha }}

      - name: Lint Code
        run: yarn lint

      - name: Build
        run: yarn build

  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      # https://github.com/marketplace/actions/yarn-install-cache
      - name: Cache yarn dependencies
        uses: c-hive/gha-yarn-cache@v1

      - name: Install dependencies
        run: yarn install --immutable --immutable-cache --check-cache

      - name: Run unit tests
        run: yarn test:ci

  e2e:
    name: Run E2E Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      # https://github.com/marketplace/actions/yarn-install-cache
      - name: Cache yarn dependencies
        uses: c-hive/gha-yarn-cache@v1

      - name: Install dependencies
        run: yarn install --immutable --immutable-cache --check-cache

      - name: Increase watchers
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p

      - name: Run e2e tests
        run: yarn e2e:ci

  sonarqube:
    name: SonarQube Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      # https://github.com/marketplace/actions/yarn-install-cache
      - name: Cache yarn dependencies
        uses: c-hive/gha-yarn-cache@v1

      - name: Install dependencies
        run: yarn install --immutable --immutable-cache --check-cache

      - name: Gather Test Coverage
        run: yarn test-coverage

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONARQUBE_HOST_URL }}

  protection:
    name: Branch Protection
    runs-on: ubuntu-latest

    steps:
      - name: Branch protection OFF
        uses: octokit/request-action@v2.0.24
        with:
          route: PUT /repos/digital-ai/dot-components/branches/develop/protection
          mediaType: '{"Accept": application/vnd.github.v3+json}'
          required_status_checks: |
            null
          enforce_admins: |
            null
          required_conversation_resolution: |
            null
          required_pull_request_reviews: |
            null
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}

      - name: Branch protection ON
        uses: octokit/request-action@v2.0.24
        with:
          route: PUT /repos/digital-ai/dot-components/branches/develop/protection
          mediaType: '{"Accept": application/vnd.github.v3+json}'
          required_status_checks: |
            strict: true
            checks: |
              - name: Lint & Build
              - name: Run Unit Tests
              - name: Run E2E Tests
          enforce_admins: |
            false
          required_pull_request_reviews: |
            required_approving_review_count: 1
          required_conversation_resolution: |
            true
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}

      # - name: Get existing branch protection
      #   id: get_branch_protection
      #   uses: octokit/request-action@v2.0.24
      #   with:
      #     route: GET /repos/digital-ai/dot-components/branches/develop/protection
      #     mediaType: '{"Accept": application/vnd.github.v3+json}'
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}

      # - run: echo steps.get_branch_protection.outputs.data
