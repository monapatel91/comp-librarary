name: Continuous Release

on:
  push:
    paths:
      - .github/workflows/version.yml
      - CHANGE_LOG.md
      - libs/dot-components/src/**
    branches:
      - master

jobs:
  # https://github.com/peter-evans/repository-dispatch
  verification:
    name: Dispatch - Lint, Test & Build
    runs-on: ubuntu-latest

    steps:
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repository: ${{ github.repository }}
          event-type: run-lint-test-build
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'

  # https://github.com/lewagon/wait-on-check-action
  # TO-DO: Test if this fails when workflow already running?
  checks:
    name: Wait - Lint, Test & Build
    runs-on: ubuntu-latest
    needs: [verification]

    steps:
      - name: wait for build to pass
        uses: lewagon/wait-on-check-action@master
        with:
          ref: ${{ github.sha }}
          check-name: Lint, Format & Build
          repo-token: ${{ github.token }}
          wait-interval: 20

      - name: wait for unit tests to pass
        uses: lewagon/wait-on-check-action@master
        with:
          ref: ${{ github.sha }}
          check-name: Run Unit Tests
          repo-token: ${{ github.token }}
          wait-interval: 20

      - name: wait for e2e tests to pass
        uses: lewagon/wait-on-check-action@master
        with:
          ref: ${{ github.sha }}
          check-name: Run E2E Tests
          repo-token: ${{ github.token }}
          wait-interval: 20

  # https://github.com/marketplace/actions/automated-version-bump
  bump-version:
    name: Bump Version & Create Tag
    runs-on: ubuntu-latest
    needs: [checks]
    outputs:
      new-version: ${{ steps.version-bump.outputs.newTag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Automated Version Bump
        id: version-bump
        uses: phips28/gh-action-bump-version@master
        env:
          GITHUB_TOKEN: ${{ github.token }}
          PACKAGEJSON_DIR: 'libs/dot-components'
        with:
          commit-message: 'CI: bumps version to {{version}} [skip ci]'
          default: prerelease
          major-wording: 'MAJOR'
          minor-wording: 'minor'
          patch-wording: 'patch'
          # currently we do not want to bump on every merge
          # once we do... remove 'alpha' from rc-wording
          rc-wording: 'alpha, RELEASE, BETA'
          target-branch: 'master'
          # rc-wording will override the preid
          preid: 'alpha'

      - name: Output Step
        env:
          NEW_TAG: ${{ steps.version-bump.outputs.newTag }}
        run: echo "new tag $NEW_TAG"

  # https://github.com/faberNovel/github-changelog-generator-action
  changelog:
    name: Generate Changelog
    runs-on: ubuntu-latest
    needs: [bump-version]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Generate Changelog
        uses: fabernovel/github-changelog-generator-action@master
        with:
          # https://github.com/github-changelog-generator/github-changelog-generator/wiki/Advanced-change-log-generation-examples#additional-options
          options: --token ${{ secrets.GITHUB_TOKEN }} --date-format %m/%d/%Y --output CI_CHANGE_LOG.md --enhancement-label **Features:** --enhancement-labels enhancement --bug-labels defect --exclude-tags 0.0.0-alpha.0.0.1-s73861automateversioning.995.d3186ab

      # https://github.com/marketplace/actions/add-commit
      - name: Commit and Push Changelog
        uses: EndBug/add-and-commit@master
        with:
          add: 'CI_CHANGE_LOG.md'
          default_author: github_actions
          message: 'Update Changelog'

  # https://github.com/marvinpinto/action-automatic-releases
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [changelog]
    if: needs.bump-version.outputs.new-version != ''

    steps:
      - name: Create Draft Release
        id: create-draft-release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          automatic_release_tag: ${{needs.bump-version.outputs.new-version}}
          draft: true
          repo_token: ${{ github.token }}
          prerelease: true

      - name: Output Step
        env:
          NEW_RELEASE: ${{ steps.create-draft-release.outputs.automatic_releases_tag }}
        run: echo "new release tag $NEW_RELEASE"

  # https://github.com/peter-evans/repository-dispatch
  release:
    name: Dispatch - Deploy to NPM
    runs-on: ubuntu-latest
    needs: [create-release]

    steps:
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repository: ${{ github.repository }}
          event-type: run-deploy-to-npm
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'

  # https://github.com/peter-evans/repository-dispatch
  github-pages:
    name: Dispatch - Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: [create-release]

    steps:
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repository: ${{ github.repository }}
          event-type: run-deploy-gh-pages
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
