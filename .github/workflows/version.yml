name: Continuous Release

on:
  push:
    paths:
      - libs/dot-components/src/**
      - .github/workflows/**
    branches:
      - master

jobs:
  build:
    name: Lint & Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      # https://github.com/marketplace/actions/yarn-install-cache
      - name: Cache yarn dependencies
        uses: c-hive/gha-yarn-cache@v1

      - name: Install dependencies
        run: yarn install

      - name: Lint Code
        run: yarn lint

      - name: Build
        run: yarn build
        env:
          CI: true

  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      # https://github.com/marketplace/actions/yarn-install-cache
      - name: Cache yarn dependencies
        uses: c-hive/gha-yarn-cache@v1

      - name: Install dependencies
        run: yarn install

      - name: Run unit tests
        run: yarn test:ci

  e2e:
    name: Run E2E Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      # https://github.com/marketplace/actions/yarn-install-cache
      - name: Cache yarn dependencies
        uses: c-hive/gha-yarn-cache@v1

      - name: Install dependencies
        run: yarn install

      - name: Increase watchers
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p

      - name: Run e2e tests
        run: yarn e2e:ci
        env:
          CI: true

  # https://github.com/marketplace/actions/automated-version-bump
  bump-version:
    name: Bump Version & Create GitHub Tag
    runs-on: ubuntu-latest
    needs: [build, unit-tests, e2e]
    outputs:
      new-version: ${{ steps.version-bump.outputs.newTag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Automated Version Bump
        id: version-bump
        uses: phips28/gh-action-bump-version@master
        env:
          GITHUB_TOKEN: ${{ github.token }}
          PACKAGEJSON_DIR: 'libs/dot-components'
        with:
          commit-message: 'CI: bumps version to {{version}} [skip ci]'
          default: prerelease
          major-wording: 'MAJOR'
          minor-wording: 'minor'
          # Providing patch-wording will override commits defaulting to a patch bump.
          # patch-wording: 'patch'
          rc-wording: 'alpha, RELEASE, BETA'
          target-branch: 'master'
          # rc-wording will override the preid
          preid: 'alpha'

      - name: Output Step
        env:
          NEW_TAG: ${{ steps.version-bump.outputs.newTag }}
        run: echo "new tag $NEW_TAG"

  # https://github.com/faberNovel/github-changelog-generator-action
  changelog:
    name: Generate Changelog
    runs-on: ubuntu-latest
    needs: [bump-version]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Generate Changelog
        uses: fabernovel/github-changelog-generator-action@master
        with:
          # https://github.com/github-changelog-generator/github-changelog-generator/wiki/Advanced-change-log-generation-examples#additional-options
          options: --token ${{ secrets.GITHUB_TOKEN }} --date-format %m/%d/%Y --output CI_CHANGE_LOG.md --enhancement-label **Features:** --enhancement-labels enhancement --bug-labels defect --exclude-tags 0.0.0-alpha.0.0.1-s73861automateversioning.995.d3186ab

      # https://github.com/marketplace/actions/add-commit
      - name: Commit and Push Changelog
        uses: EndBug/add-and-commit@master
        with:
          add: CI_CHANGE_LOG.md
          default_author: github_actions
          message: 'Update Changelog'

  # https://github.com/marvinpinto/action-automatic-releases
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [bump-version, changelog]
    if: needs.bump-version.outputs.new-version != ''

    steps:
      - name: New Version
        env:
          NEW_VERSION: ${{ steps.bump-version.outputs.new-version }}
        run: echo "new version $NEW_VERSION"

      - name: Create Release
        id: create-release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          automatic_release_tag: ${{needs.bump-version.outputs.new-version}}
          # draft: true
          repo_token: ${{ github.token }}
          prerelease: true

      - name: Output Step
        env:
          NEW_RELEASE: ${{ steps.create-release.outputs.automatic_releases_tag }}
        run: echo "new release tag $NEW_RELEASE"

  # https://github.com/peter-evans/repository-dispatch
  release:
    name: Trigger Worflow - Deploy to NPM
    runs-on: ubuntu-latest
    needs: [create-release]

    steps:
      - name: Trigger Workflow
        uses: benc-uk/workflow-dispatch@v1
        with:
          # inputs: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
          inputs: '{"message": "triggered by Continuous Release Workflow"}'
          # repo: ${{ github.repository }}
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          workflow: Deploy to NPM

      # - run: 'echo "SHA: ${{github.sha }}"'

  # https://github.com/peter-evans/repository-dispatch
  github-pages:
    name: Trigger Workflow - Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: [create-release]

    steps:
      - name: Trigger Workflow
        uses: benc-uk/workflow-dispatch@v1
        with:
          # inputs: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
          inputs: '{"message": "triggered by Continuous Release Workflow"}'
          # repo: ${{ github.repository }}
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          workflow: Deploy to GitHub Pages

      # - run: 'echo "SHA: ${{github.sha }}"'
