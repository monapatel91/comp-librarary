name: PR Deployment

on:
  pull_request:

jobs:
  get-version:
    name: Get Version Number for Build
    runs-on: ubuntu-latest
    outputs:
      version-string: ${{ steps.get_version.outputs.VERSION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: pr-number-action
        id: get_pr
        uses: kkak10/pr-number-action@v1.3
        # if: github.event_name == 'pull_request'

      - name: Get the version
        id: get_version
        shell: bash
        run: |
          echo ::set-output name=VERSION::0.0.0.${{ steps.get_pr.outputs.pr }}

  # https://github.com/peter-evans/repository-dispatch
  verification:
    name: Dispatch - Lint, Test & Build
    runs-on: ubuntu-latest

    steps:
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repository: ${{ github.repository }}
          event-type: run-lint-test-build
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'

  # https://github.com/lewagon/wait-on-check-action
  checks:
    name: Wait - Lint, Test & Build
    runs-on: ubuntu-latest
    needs: [verification]

    steps:
      - name: wait for build to pass
        uses: lewagon/wait-on-check-action@master
        with:
          ref: ${{ github.ref }}
          check-name: Lint, Format & Build
          repo-token: ${{ github.token }}
          wait-interval: 20

      - name: wait for unit tests to pass
        uses: lewagon/wait-on-check-action@master
        with:
          ref: ${{ github.ref }}
          check-name: Run Unit Tests
          repo-token: ${{ github.token }}
          wait-interval: 20

      - name: wait for e2e tests to pass
        uses: lewagon/wait-on-check-action@master
        with:
          ref: ${{ github.ref }}
          check-name: Run E2E Tests
          repo-token: ${{ github.token }}
          wait-interval: 20

  build-preview:
    needs: [get-version, checks]
    name: Build and Publish Preview Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build and push Docker images for Storybook
        uses: kciter/aws-ecr-action@7ea3f73762295bdbee44242a87de3831f64b4e8f
        with:
          access_key_id: ${{ secrets.GH_AWS_ACCESS_KEY_ID }}
          secret_access_key: ${{ secrets.GH_AWS_SECRET_ACCESS_KEY }}
          account_id: ${{ secrets.AWS_ACCOUNT_ID }}
          repo: storybook
          region: ${{ secrets.AWS_REGION }}
          dockerfile: Dockerfile
          tags: ${{needs.get-version.outputs.version-string}}

  deploy-pr:
    needs: [build-preview]
    name: Deploy PR to EKS
    runs-on: ubuntu-latest
    environment:
      name: preview
      url: https://ux-pr${{ steps.get_pr.outputs.pr }}.lisbon-dev.com/

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get PR Number
        id: get_pr
        uses: kkak10/pr-number-action@v1.3
        if: github.event_name == 'pull_request'

      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.EKS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.EKS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy Storybook
        uses: koslibpro/helm-eks-action@v1.7.0
        env:
          KUBE_CONFIG_DATA: ${{ secrets.EKS_CONFIG }}
        with:
          command: helm upgrade ux-pr${{ steps.get_pr.outputs.pr }} --install --create-namespace --namespace=ux-pr${{ steps.get_pr.outputs.pr }} --set image.tag=${{needs.get-version.outputs.version-string}} --set image.sha=${{github.sha}} build/helm/storybook

      - name: Add Comment to PR
        uses: github-actions-up-and-running/pr-comment@v1.0.1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          message: 'SHA: ${{github.sha}} has been built and deployed to the test environment. Storybook URL: https://ux-pr${{ steps.get_pr.outputs.pr }}.lisbon-dev.com/ '
